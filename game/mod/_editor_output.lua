-- Generated by LuaSTG editor
-- Mod name: unnamed
_author="LuaSTG User"
_mod_version=4096
_allow_practice=true
_allow_sc_practice=true

difficulty=4
dialogsys_sub.Init()
_LoadImageFromFile('image:'.."MusicName_boss1","MusicName_boss1.png",true,0,0,false,0)
_LoadImageFromFile('image:'.."MusicName_boss2","MusicName_boss2.png",true,0,0,false,0)
_LoadImageFromFile('image:'.."MusicName_boss3","MusicName_boss3.png",true,0,0,false,0)
_LoadImageFromFile('image:'.."MusicName_st1","MusicName_st1.png",true,0,0,false,0)
_LoadImageFromFile('image:'.."MusicName_st2","MusicName_st2.png",true,0,0,false,0)
_LoadImageFromFile('image:'.."MusicName_st3","MusicName_st3.png",true,0,0,false,0)
_editor_class["alarm_laser_type_sector"]=Class(laser)
_editor_class["alarm_laser_type_sector"].init=function(self,_x,_y,A,COL,REMAIN_TIME,WAYS,DIRC)
	laser.init(self,COL,_x,_y,0,250,250,0,2,0,0)
    SetV2(self,0,A,true,false)
    laser.ChangeImage(self,1,COL)
    _object.set_color(self,"mul+add",75,255,255,255)
    self.colli=false
    local A_SHIFT=0.5
    lasttask=task.New(self,function()
        laser.grow(self,REMAIN_TIME/6,false,true)
        task._Wait(REMAIN_TIME/6*5)
        laser._TurnOff(self,5,true)
        _del(self,false)
    end)
    lasttask=task.New(self,function()
        task._Wait(1)
        if WAYS>1 then
            if DIRC==0 then
                last=New(_editor_class["alarm_laser_type_sector"],self.x,self.y,A+A_SHIFT,COL,REMAIN_TIME,WAYS-1,1)
                last=New(_editor_class["alarm_laser_type_sector"],self.x,self.y,A-A_SHIFT,COL,REMAIN_TIME,WAYS-1,-1)
            else
                last=New(_editor_class["alarm_laser_type_sector"],self.x,self.y,A+A_SHIFT*DIRC,COL,REMAIN_TIME,WAYS-1,DIRC)
            end
        else
        end
    end)
end
_editor_class["alarm_laser_type_sector"].kill=function(self)
end
_editor_class["alarm_laser_type_line"]=Class(laser)
_editor_class["alarm_laser_type_line"].init=function(self,_x,_y,A,COL,REMAIN_TIME,WAYS,REBOUND,DIRC)
	laser.init(self,COLOR_RED,_x,_y,0,0,960,100,0.5,0,0)
    --[[ 角度，颜色，停留时间，条数，反弹次数，方向(正常0，全边界反弹1） --]]--[=[
    --]=]
    local bottom_rebound_flag=0
    if DIRC==1 then
    	DIRC=0
    	bottom_rebound_flag=1
    end
    SetV2(self,0,A,true,false)
    laser.ChangeImage(self,1,COL)
    _object.set_color(self,"mul+add",25,255,255,255)
    self.colli=false
    local POS_SHIFT=0.75
    lasttask=task.New(self,function()
        laser.grow(self,REMAIN_TIME/6,false,true)
        if REBOUND>0 then
            A=A%360
            if A>180 then A=A-360 end
            local w=lstg.world
            local x,y=self.x,self.y
            local a1=Angle(x,y,w.l,w.t)--左上角
            local a2=Angle(x,y,w.r,w.t)--右上角
            local a3=Angle(x,y,w.r,w.b)--右下角
            local a4=Angle(x,y,w.l,w.b)--左下角
            function cot(a)
            	return cos(a)/sin(a)
            end
            if A>=a1 or A<a4 then
            	y=y+tan(-1*A)*(x-w.l)
            	x=w.l+1
            	A=sign(A)*(180-abs(A))
            elseif A>=a2 and A<a1 then
            	x=x+cot(A)*(w.t-y)
            	y=w.t-1
            	A=-1*A
            elseif A>=a3 and A<a2 then
            	y=y+tan(A)*(w.r-x)
            	x=w.r-1
            	A=sign(A)*(180-abs(A))
            elseif A>=a4 and A<a3 then
            	x=x+cot(-1*A)*(y-w.b)
            	y=w.b+1
            	A=-1*A
            	bottom_rebound_flag=bottom_rebound_flag+1
            end
            
            if bottom_rebound_flag<2 then
                last=New(_editor_class["alarm_laser_type_line"],x,y,A,COL,REMAIN_TIME,1,REBOUND-1,DIRC)
            else
            end
        else
        end
        task._Wait(REMAIN_TIME/6*5)
        laser._TurnOff(self,5,true)
        _del(self,false)
    end)
    lasttask=task.New(self,function()
        task._Wait(2)
        if WAYS>1 then
            if DIRC==0 then
                last=New(_editor_class["alarm_laser_type_line"],self.x+cos(A+90)*POS_SHIFT,self.y+sin(A+90)*POS_SHIFT,A,COL,REMAIN_TIME,WAYS-1,REBOUND,1)
                last=New(_editor_class["alarm_laser_type_line"],self.x+cos(A-90)*POS_SHIFT,self.y+sin(A-90)*POS_SHIFT,A,COL,REMAIN_TIME,WAYS-1,REBOUND,-1)
            else
                last=New(_editor_class["alarm_laser_type_line"],self.x+cos(A+90*DIRC)*POS_SHIFT,self.y+sin(A+90*DIRC)*POS_SHIFT,A,COL,REMAIN_TIME,WAYS-1,REBOUND,DIRC)
            end
        else
        end
    end)
end
_editor_class["alarm_laser_type_line"].kill=function(self)
end
_editor_class["alarm_laser_type_wide"]=Class(laser)
_editor_class["alarm_laser_type_wide"].init=function(self,_x,_y,A,COL,REMAIN_TIME,WAYS,REBOUND,DIRC)
	laser.init(self,COLOR_RED,_x,_y,0,25,960,100,1,0,0)
    --[[ 角度，颜色，停留时间，条数，反弹次数，方向(正常0，全边界反弹1） --]]--[=[
    --]=]
    local bottom_rebound_flag=0
    if DIRC==1 then
    	DIRC=0
    	bottom_rebound_flag=1
    end
    SetV2(self,0,A,true,false)
    laser.ChangeImage(self,1,COL)
    _object.set_color(self,"mul+add",25,255,255,255)
    self.colli=false
    local POS_SHIFT=5
    lasttask=task.New(self,function()
        laser.grow(self,REMAIN_TIME/2,false,true)
        if REBOUND>0 then
            A=A%360
            if A>180 then A=A-360 end
            local w=lstg.world
            local x,y=self.x,self.y
            local a1=Angle(x,y,w.l,w.t)--左上角
            local a2=Angle(x,y,w.r,w.t)--右上角
            local a3=Angle(x,y,w.r,w.b)--右下角
            local a4=Angle(x,y,w.l,w.b)--左下角
            function cot(a)
            	return cos(a)/sin(a)
            end
            if A>=a1 or A<a4 then
            	y=y+tan(-1*A)*(x-w.l)
            	x=w.l+1
            	A=sign(A)*(180-abs(A))
            elseif A>=a2 and A<a1 then
            	x=x+cot(A)*(w.t-y)
            	y=w.t-1
            	A=-1*A
            elseif A>=a3 and A<a2 then
            	y=y+tan(A)*(w.r-x)
            	x=w.r-1
            	A=sign(A)*(180-abs(A))
            elseif A>=a4 and A<a3 then
            	x=x+cot(-1*A)*(y-w.b)
            	y=w.b+1
            	A=-1*A
            	bottom_rebound_flag=bottom_rebound_flag+1
            end
            
            if bottom_rebound_flag<2 then
                last=New(_editor_class["alarm_laser_type_line"],x,y,A,COL,REMAIN_TIME,1,REBOUND-1,DIRC)
            else
            end
        else
        end
        task._Wait(REMAIN_TIME/2)
        laser._TurnOff(self,5,true)
        _del(self,false)
    end)
    lasttask=task.New(self,function()
        task._Wait(1)
        if WAYS>1 then
            if DIRC==0 then
                last=New(_editor_class["alarm_laser_type_line"],self.x+cos(A+90)*POS_SHIFT,self.y+sin(A+90)*POS_SHIFT,A,COL,REMAIN_TIME,WAYS-1,REBOUND,1)
                last=New(_editor_class["alarm_laser_type_line"],self.x+cos(A-90)*POS_SHIFT,self.y+sin(A-90)*POS_SHIFT,A,COL,REMAIN_TIME,WAYS-1,REBOUND,-1)
            else
                last=New(_editor_class["alarm_laser_type_line"],self.x+cos(A+90*DIRC)*POS_SHIFT,self.y+sin(A+90*DIRC)*POS_SHIFT,A,COL,REMAIN_TIME,WAYS-1,REBOUND,DIRC)
            end
        else
        end
    end)
end
_editor_class["alarm_laser_type_wide"].kill=function(self)
end
_editor_class["Boss_Name_summoner"]=Class(_object)
_editor_class["Boss_Name_summoner"].init=function(self,_x,_y,INDEX)
	self.x,self.y=_x,_y
	self.img="leaf"
	self.layer=LAYER_ENEMY_BULLET
	self.group=GROUP_GHOST
	self.hide=true
	self.bound=true
	self.navi=false
	self.hp=10
	self.maxhp=10
	self.colli=true
	self._servants={}
	self._blend,self._a,self._r,self._g,self._b='',255,255,255,255
    self.INDEX=INDEX
end
_editor_class["Boss_Name_summoner"].frame=function(self)
    exani_player_manager.ExecuteExaniPredefine(play_manager,'BossName'..self.INDEX,'init') 
    --if not explrmgr_b then explrmgr_b={} end
    --if not explrmgr_b[self.INDEX] then
    --	exani_player_manager.SetExaniAttribute(play_manager,'BossName'..self.INDEX,1,126,LAYER_TOP,'world',1,1,false) 
    --	explrmgr_b[self.INDEX]=true 
    --end
    RawDel(self)
end
_editor_class["exani_player_manager_summoner"]=Class(_object)
_editor_class["exani_player_manager_summoner"].init=function(self,_x,_y,index)
	self.x,self.y=_x,_y
	self.img="leaf"
	self.layer=LAYER_ENEMY_BULLET
	self.group=GROUP_ENEMY_BULLET
	self.hide=false
	self.bound=true
	self.navi=false
	self.hp=10
	self.maxhp=10
	self.colli=true
	self._servants={}
	self._blend,self._a,self._r,self._g,self._b='',255,255,255,255
    self.index=index
end
_editor_class["exani_player_manager_summoner"].frame=function(self)
    New(exani_player_manager)
    exani_player_manager.CreateSingleExani(play_manager,'ChapterFinished')
    exani_player_manager.CreateSingleExani(play_manager,'Life_Extend')
    exani_player_manager.CreateSingleExani(play_manager,'Spell_Restored')
    if self.index==1 then
        exani_player_manager.CreateSingleExani(play_manager,'SpellCardAttack_1A')
        exani_player_manager.CreateSingleExani(play_manager,'SpellCardAttack_1B')
        exani_player_manager.CreateSingleExani(play_manager,'SpellCardAttack_1F')
    else
        exani_player_manager.CreateSingleExani(play_manager,'SpellCardAttack_'..self.index)
    end
    RawDel(self)
end
_editor_class["Stage_Title_summoner"]=Class(_object)
_editor_class["Stage_Title_summoner"].init=function(self,_x,_y,INDEX)
	self.x,self.y=_x,_y
	self.img="leaf"
	self.layer=LAYER_ENEMY_BULLET
	self.group=GROUP_GHOST
	self.hide=true
	self.bound=true
	self.navi=false
	self.hp=10
	self.maxhp=10
	self.colli=true
	self._servants={}
	self._blend,self._a,self._r,self._g,self._b='',255,255,255,255
    self.INDEX=INDEX
end
_editor_class["Stage_Title_summoner"].frame=function(self)
    exani_player_manager.ExecuteExaniPredefine(play_manager,'StageTitle'..self.INDEX,'init') 
    --if not explrmgr_b then explrmgr_b={} end
    --if not explrmgr_b['stt'..self.INDEX] then
    --	exani_player_manager.SetExaniAttribute(play_manager,'StageTitle'..self.INDEX,1,175,LAYER_TOP,'world',1,1) 
    --	explrmgr_b['stt'..self.INDEX]=true 
    --end
    RawDel(self)
end
_editor_class["SpellcardAttack_summoner"]=Class(_object)
_editor_class["SpellcardAttack_summoner"].init=function(self,_x,_y,INDEX)
	self.x,self.y=_x,_y
	self.img="leaf"
	self.layer=LAYER_ENEMY_BULLET
	self.group=GROUP_GHOST
	self.hide=true
	self.bound=true
	self.navi=false
	self.hp=10
	self.maxhp=10
	self.colli=true
	self._servants={}
	self._blend,self._a,self._r,self._g,self._b='',255,255,255,255
    self.INDEX=INDEX
end
_editor_class["SpellcardAttack_summoner"].frame=function(self)
    if not IsValid(player_manager) then New(exani_player_manager) explrmgr_b=nil end
    exani_player_manager.ExecuteExaniPredefine(play_manager,'SpellCardAttack_'..self.INDEX,'init') 
    --if not explrmgr_b then explrmgr_b={} end
    --if not explrmgr_b['sca'..self.INDEX] then
    --	exani_player_manager.SetExaniAttribute(play_manager,'SpellCardAttack_'..self.INDEX,1,58,LAYER_TOP,'world',1,1,false) 
    --	explrmgr_b['sca'..self.INDEX]=true 
    --end
    RawDel(self)
end
_editor_class["MusicNameInStage"]=Class(_object)
_editor_class["MusicNameInStage"].init=function(self,_x,_y,INDEX)
	self.x,self.y=_x,_y
	self.img="leaf"
	self.layer=LAYER_TOP
	self.group=GROUP_GHOST
	self.hide=false
	self.bound=false
	self.navi=false
	self.hp=10
	self.maxhp=10
	self.colli=false
	self._servants={}
	self._blend,self._a,self._r,self._g,self._b='',255,255,255,255
    self.img='image:MusicName_'..INDEX
    SetImageCenter(self.img,510,149)
    self.x=350
    self.y=-224
    _object.set_color(self,"",0,255,255,255)
    lasttask=task.New(self,function()
        do local t,_d_t=(0),(1/59) local a,_d_a=(0),(255/59) for _=1,60 do
            _object.set_color(self,"",a,255,255,255)
            self.x=350+(196-350)*(1-(1-t)^2)
            task._Wait(1)
        t=t+_d_t a=a+_d_a end end
        task._Wait(90)
        do local t,_d_t=(1),(-1/59) local a,_d_a=(255),(-255/59) for _=1,60 do
            _object.set_color(self,"",a,255,255,255)
            self.x=350+(196-350)*(1-(1-t)^2)
            task._Wait(1)
        t=t+_d_t a=a+_d_a end end
        _del(self,false)
    end)
end
_editor_class["Teee"]=Class(boss)
_editor_class["Teee"].cards={}
_editor_class["Teee"].name="Name"
_editor_class["Teee"].init=function(self,cards)
	boss.init(self,240,384,"Name",cards,New(spellcard_background),"All")
end
_editor_class["Teee"].bgm = ""
_editor_class["Teee"]._bg = nil
_editor_class["Teee"].difficulty = "All"
table.insert(_editor_class["Teee"].cards,boss.move.New(0,144,60,MOVE_NORMAL))
_tmp_sc=boss.card.New("",2,15,60,600,{0,0,0},false)
function _tmp_sc:init()
    lasttask=task.New(self,function()
        task.MoveTo(0,144,180,MOVE_NORMAL)
    end)
end
function _tmp_sc:del()
end
table.insert(_editor_class["Teee"].cards,_tmp_sc)
table.insert(_sc_table,{"Teee","\"\"",_tmp_sc,#_editor_class["Teee"].cards,false})
_AddToSCPRList(_tmp_sc,"","Teee","",nil,false)
stage.group.New('menu',{},"Easy",{lifeleft=2,power=400,faith=50000,bomb=3},true,1)
stage.group.AddStage('Easy','Stage 4@Easy',{lifeleft=11,power=400,faith=50000,bomb=3},true)
stage.group.DefStageFunc('Stage 4@Easy','init',function(self)
    _init_item(self)
    difficulty=self.group.difficulty    New(mask_fader,'open')
   jstg.CreatePlayers() --New(_G[lstg.var.player_name])
    task.New(self,function()
        dialogsys_sub.LoadImage('st3')
        difficulty=1
        last=New(_editor_class["exani_player_manager_summoner"],self.x,self.y,3)
        do
            local bt={18*60+40,	39*60+1,	48*60+20,	58*60+20,	68*60,300*60}
            --if debugPoint>0 then
            --New(st3bg_magic_forest,debugPoint,debugPoint-1)
            --else
            --New(st3bg_magic_forest)
            --end
            --New(bg_template)
            task._Wait(60)
            last=New(_editor_class["MusicNameInStage"],self.x,self.y,'st3')
            if debugPoint>0 then
                LoadMusicRecord("st4");_play_music("st4",bt[debugPoint]/60)
                if false then ex.stageframe=int(bt[debugPoint]/60/60) end
            else
                LoadMusicRecord("st4");_play_music("st4",0)
                if false then ex.stageframe=int(0/60) end
            end
        end
        if not lstg.var.start_from_boss then
            if debugPoint==0 then
                do
                end
            else
                debugPoint=debugPoint-1
            end
            if debugPoint==0 then
                do
                end
            else
                debugPoint=debugPoint-1
            end
            if debugPoint==0 then
                do
                end
            else
                debugPoint=debugPoint-1
            end
            if debugPoint==0 then
                do
                end
            else
                debugPoint=debugPoint-1
            end
            if debugPoint==0 then
                do
                end
            else
                debugPoint=debugPoint-1
            end
        else
        end
        do
            player_class.SpellClear(player)
            local _boss_wait=true local _ref=New(_editor_class["Teee"],_editor_class["Teee"].cards) last=_ref
            if _boss_wait then while IsValid(_ref) do task.Wait() end end
        end
        do
            New(stage_clear_bonus,4*5000000)
            task._Wait(180)
            if true then return end
        end
    end)
    task.New(self,function()
		while coroutine.status(self.task[1])~='dead' do task.Wait() end
		stage.group.FinishReplay()
		New(mask_fader,'close')
		task.New(self,function()
			local _,bgm=EnumRes('bgm')
			for i=1,30 do 
				for _,v in pairs(bgm) do
					if GetMusicState(v)=='playing' then
					SetBGMVolume(v,1-i/30) end
				end
				task.Wait()
		end end)
		task.Wait(30)
		stage.group.FinishStage()
	end)
end)
